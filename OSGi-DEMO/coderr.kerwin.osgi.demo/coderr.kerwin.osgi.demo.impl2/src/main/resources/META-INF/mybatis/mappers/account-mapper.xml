<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->
<mapper namespace="coderr.kerwin.osgi.demo.impl1">

	<resultMap type="coderr.kerwin.osgi.demo.impl1.model.Account" id="accountResultMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="code" column="code" />
		<result property="status" column="status" />
	</resultMap>

	<!-- id和mapper接口中的方法名对应，resultType使用mybatis.xml中的别名 -->    
	<select id="getAccount" resultType="coderr.kerwin.osgi.demo.impl1.model.Account">        
		<![CDATA[            select * from account limit 1        ]]>    
	</select>        
	<select id="getAllAccount" resultType="list" resultMap="accountResultMap">        
		<![CDATA[            select * from account        ]]>    
	</select>        
	<!-- accountResultMap是account-resultmap.xml中定义的resultmap -->    
	<select id="getAccountById" parameterType="string" resultType="coderr.kerwin.osgi.demo.impl1.model.Account" resultMap="accountResultMap">        
		<![CDATA[            select * from account where id = #{id}        ]]>    
	</select>        
	<!-- accountMap.accountResultMap是account-resultmap.xml中定义的resultmap，通过namespace.id找到 -->    
	<select id="getAccountByNames" parameterType="string" resultMap="accountResultMap">        
		<![CDATA[            select * from account where name = #{name}        ]]>    
	</select>      
	<select id="getLastCode" resultType="int">        
		<![CDATA[            select code from account order by code desc limit 1       ]]>    
	</select> 
	<select id="updateCodeById" parameterType="coderr.kerwin.osgi.demo.impl1.model.Account">        
		<![CDATA[            update account set code = #{code}, status = #{status} where id = #{id}       ]]>    
	</select>   
    <!-- 自动生成id策略 -->    
    <insert id="addAccount" useGeneratedKeys="true" keyProperty="id" parameterType="coderr.kerwin.osgi.demo.impl1.model.Account">        insert into account(id, name, code, status)        values(#{id}, #{name}, #{code}, #{status})    </insert>        
    <!-- 根据selectKey语句生成主键 -->    
    <insert id="addAccount4Key" parameterType="coderr.kerwin.osgi.demo.impl1.model.Account">        
    	<selectKey keyProperty="id" order="BEFORE" resultType="int">            select cast(random() * 10000 as Integer) a from #Tab        </selectKey>
	    insert into account(id, name, code, status)        values(#{id}, #{name}, #{code}, #{status})    
    </insert>        
    <update id="editAccount" parameterType="coderr.kerwin.osgi.demo.impl1.model.Account">        update account set        status = #{status},        code = #{code},        name = #{name}        where id = #{id}    </update>        
    <delete id="removeAccount" parameterType="int">        delete from account where id = #{id}    </delete>
</mapper>